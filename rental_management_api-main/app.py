import requests
import uuid
import hmac
import hashlib
import json
import urllib.parse
import qrcode
import time
from datetime import datetime

# Nh·∫≠p s·ªë ti·ªÅn v√† email t·ª´ ng∆∞·ªùi d√πng
amount_str = input("Nh·∫≠p s·ªë ti·ªÅn mu·ªën thanh to√°n: ").strip()
if not amount_str.isdigit() or int(amount_str) <= 0:
    print(" S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p s·ªë nguy√™n d∆∞∆°ng.")
    exit()
amount = int(amount_str)

email = input("Nh·∫≠p email c·ªßa b·∫°n: ").strip()

# C·∫•u h√¨nh API
MOMO_CONFIG = {
    "accessKey": "F8BBA842ECF85",
    "secretKey": "K951B6PE1waDMi640xX08PD3vg6EkVlz",
    "partnerCode": "MOMO",
    "endpoint": "https://test-payment.momo.vn/v2/gateway/api/create"
}

ZALOPAY_CONFIG = {
    "app_id": "2554",
    "key1": "sdngKKJmqEMzvh5QQcdD2A9XBSKUNaYn",
    "endpoint_create": "https://sb-openapi.zalopay.vn/v2/create"
}

BANK_ACCOUNT = "0123456789"
BANK_ID = "970422"  # Vietcombank

# T·∫°o link thanh to√°n MoMo
def get_momo_payment_link(amount):
    order_id = str(uuid.uuid4())
    request_id = str(uuid.uuid4())
    redirect_url = "https://webhook.site/test"

    raw_signature = f"accessKey={MOMO_CONFIG['accessKey']}&amount={amount}&extraData=&ipnUrl={redirect_url}&orderId={order_id}&orderInfo=Thanh to√°n MoMo&partnerCode={MOMO_CONFIG['partnerCode']}&redirectUrl={redirect_url}&requestId={request_id}&requestType=payWithMethod"
    signature = hmac.new(MOMO_CONFIG['secretKey'].encode(), raw_signature.encode(), hashlib.sha256).hexdigest()

    payload = {
        "partnerCode": MOMO_CONFIG['partnerCode'],
        "requestType": "payWithMethod",
        "ipnUrl": redirect_url,
        "redirectUrl": redirect_url,
        "orderId": order_id,
        "amount": amount,
        "orderInfo": "Thanh to√°n MoMo",
        "requestId": request_id,
        "extraData": "",
        "signature": signature
    }

    response = requests.post(MOMO_CONFIG["endpoint"], json=payload, headers={'Content-Type': 'application/json'})
    return response.json().get('payUrl', " L·ªói t·∫°o link thanh to√°n MoMo!")

# T·∫°o ƒë∆°n h√†ng ZaloPay
def create_zalopay_payment(amount, email):
    trans_id = str(int(time.time() * 1000))[-6:]
    app_trans_id = f"{datetime.now().strftime('%y%m%d')}_{trans_id}"
    app_time = int(time.time() * 1000)

    order = {
    "app_id": ZALOPAY_CONFIG["app_id"],
    "app_trans_id": app_trans_id,
    "app_user": email,
    "app_time": app_time,
    "amount": amount,
    "item": json.dumps([
        {"itemid": "rent_fee", "itemname": "Ti·ªÅn thu√™ ph√≤ng", "itemprice": amount, "itemquantity": 1}
    ], ensure_ascii=False),
    "embed_data": json.dumps({"email": email}),
    "callback_url": "https://yourserver.com/callback",
    "description": "Thanh to√°n ti·ªÅn thu√™ ph√≤ng",
    "bank_code": "zalopayapp"
}

#  T·∫°o ch·ªØ k√Ω MAC
    # Ki·ªÉm tra ch·ªØ k√Ω MAC
    raw_data = f"{ZALOPAY_CONFIG['app_id']}|{order['app_trans_id']}|{order['app_user']}|{order['amount']}|{order['app_time']}|{order['embed_data']}|{order['item']}"
    mac = hmac.new(ZALOPAY_CONFIG["key1"].encode(), raw_data.encode(), hashlib.sha256).hexdigest()
    order["mac"] = mac

#  G·ª≠i request t·∫°o thanh to√°n
    headers = {"Content-Type": "application/json"}
    response = requests.post(ZALOPAY_CONFIG["endpoint_create"], json=order, headers=headers)
    return response.json()
# T·∫°o m√£ QR VietQR
def generate_vietqr_web_link(bank_id, bank_account, amount, description):
    description_encoded = urllib.parse.quote(description)  # M√£ h√≥a n·ªôi dung
    vietqr_web_link = f"https://vietqr.net/?amount={amount}&acc={bank_account}&bank={bank_id}&note={description_encoded}"
    return vietqr_web_link

# ƒê·ªãnh nghƒ©a th√¥ng tin ng√¢n h√†ng
bank_id = "970422"  # M√£ ng√¢n h√†ng (V√≠ d·ª•: Vietcombank)
bank_account = "123456789"  # S·ªë t√†i kho·∫£n ng√¢n h√†ng

# G·ªçi h√†m t·∫°o link VietQR
bank_qr = generate_vietqr_web_link(bank_id, bank_account, amount, "Thanh to√°n ti·ªÅn thu√™ ph√≤ng")
print("üîó Link VietQR tr√™n web:", bank_qr)


# Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n
print("\nCh·ªçn ph∆∞∆°ng th·ª©c thanh to√°n:")
print("1. MoMo")
print("2. ZaloPay")
print("3. Ng√¢n h√†ng (VietQR)")
choice = input("Nh·∫≠p l·ª±a ch·ªçn (1/2/3): ").strip()

if choice == "1":
    momo_link = get_momo_payment_link(amount)
    print(" Th√†nh c√¥ng! Link thanh to√°n MoMo:")
    print( momo_link)

elif choice == "2":
    zalopay_response = create_zalopay_payment(amount, email)
    if zalopay_response["return_code"] == 1:
        print(" Th√†nh c√¥ng! Link thanh to√°n ZaloPay:")
        print( zalopay_response["order_url"])
    else:
        print(" L·ªói ZaloPay:", zalopay_response["return_message"])
        print(" Chi ti·∫øt:", zalopay_response.get("sub_return_code"), "-", zalopay_response.get("sub_return_message"))

elif choice == "3":
    bank_qr = generate_vietqr_web_link(bank_id, bank_account, amount, "Thanh to√°n ti·ªÅn thu√™ ph√≤ng")
    print("üîó Link VietQR tr√™n web:", bank_qr)
else:
    print(" L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")
